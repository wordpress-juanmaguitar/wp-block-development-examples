{"version":3,"file":"index.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACoD;AACR;AACS;AACG;AAEzC,SAASI,IAAIA,CAAA,EAAG;EAC9B,MAAMC,UAAU,GAAGF,sEAAa,CAAC,CAAC;EAClC,MAAMG,QAAQ,GAAGL,0DAAS,CACvBM,MAAM,IAAMA,MAAM,CAAE,aAAc,CAAC,CAACC,kBAAkB,CAAC,CAAC,EAC1D,EACD,CAAC;EAED,MAAM,CAAEC,IAAI,EAAEC,OAAO,CAAE,GAAGR,mEAAa,CAAE,UAAU,EAAEI,QAAQ,EAAE,MAAO,CAAC;EAEvE,MAAMK,cAAc,GAAGF,IAAI,CAACG,wBAAwB;EACpD,MAAMC,eAAe,GAAKC,QAAQ,IAAM;IACvCJ,OAAO,CAAE;MAAE,GAAGD,IAAI;MAAEG,wBAAwB,EAAEE;IAAS,CAAE,CAAC;EAC3D,CAAC;EAED,OACCC,oDAAA;IAAA,GAAUV;EAAU,GACnBU,oDAAA,CAACf,8DAAW;IACXgB,KAAK,EAAC,kBAAkB;IACxBC,KAAK,EAAGN,cAAgB;IACxBO,QAAQ,EAAGL;EAAiB,CAC5B,CACG,CAAC;AAER;;;;;;;;;;AC/BA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACsD;;AAEtD;AACA;AACA;AACA;AACA;AACA;AACA;AACsB;;AAEtB;AACA;AACA;AAC0B;AACU;;AAEpC;AACA;AACA;AACA;AACA;AACAM,oEAAiB,CAAEC,6CAAa,EAAE;EACjC;AACD;AACA;EACCE,IAAI,EAAElB,6CAAIA;AACX,CAAE,CAAC,C","sources":["webpack://@block-development-examples/meta-block-bb1e55/./src/edit.js","webpack://@block-development-examples/meta-block-bb1e55/external window [\"wp\",\"blockEditor\"]","webpack://@block-development-examples/meta-block-bb1e55/external window [\"wp\",\"blocks\"]","webpack://@block-development-examples/meta-block-bb1e55/external window [\"wp\",\"components\"]","webpack://@block-development-examples/meta-block-bb1e55/external window [\"wp\",\"coreData\"]","webpack://@block-development-examples/meta-block-bb1e55/external window [\"wp\",\"data\"]","webpack://@block-development-examples/meta-block-bb1e55/external window \"React\"","webpack://@block-development-examples/meta-block-bb1e55/webpack/bootstrap","webpack://@block-development-examples/meta-block-bb1e55/webpack/runtime/compat get default export","webpack://@block-development-examples/meta-block-bb1e55/webpack/runtime/define property getters","webpack://@block-development-examples/meta-block-bb1e55/webpack/runtime/hasOwnProperty shorthand","webpack://@block-development-examples/meta-block-bb1e55/webpack/runtime/make namespace object","webpack://@block-development-examples/meta-block-bb1e55/./src/index.js"],"sourcesContent":["/**\n * WordPress dependencies.\n */\nimport { TextControl } from '@wordpress/components';\nimport { useSelect } from '@wordpress/data';\nimport { useEntityProp } from '@wordpress/core-data';\nimport { useBlockProps } from '@wordpress/block-editor';\n\nexport default function Edit() {\n\tconst blockProps = useBlockProps();\n\tconst postType = useSelect(\n\t\t( select ) => select( 'core/editor' ).getCurrentPostType(),\n\t\t[]\n\t);\n\n\tconst [ meta, setMeta ] = useEntityProp( 'postType', postType, 'meta' );\n\n\tconst metaFieldValue = meta.myguten_meta_block_field;\n\tconst updateMetaValue = ( newValue ) => {\n\t\tsetMeta( { ...meta, myguten_meta_block_field: newValue } );\n\t};\n\n\treturn (\n\t\t<div { ...blockProps }>\n\t\t\t<TextControl\n\t\t\t\tlabel=\"Meta Block Field\"\n\t\t\t\tvalue={ metaFieldValue }\n\t\t\t\tonChange={ updateMetaValue }\n\t\t\t/>\n\t\t</div>\n\t);\n}\n","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"coreData\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"React\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * Registers a new block provided a unique name and an object defining its behavior.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-registration/\n */\nimport { registerBlockType } from '@wordpress/blocks';\n\n/**\n * Lets webpack process CSS, SASS or SCSS files referenced in JavaScript files.\n * All files containing `style` keyword are bundled together. The code used\n * gets applied both to the front of your site and to the editor.\n *\n * @see https://www.npmjs.com/package/@wordpress/scripts#using-css\n */\nimport './style.scss';\n\n/**\n * Internal dependencies\n */\nimport Edit from './edit';\nimport metadata from './block.json';\n\n/**\n * Every block starts by registering a new block type definition.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-registration/\n */\nregisterBlockType( metadata.name, {\n\t/**\n\t * @see ./edit.js\n\t */\n\tedit: Edit,\n} );\n"],"names":["TextControl","useSelect","useEntityProp","useBlockProps","Edit","blockProps","postType","select","getCurrentPostType","meta","setMeta","metaFieldValue","myguten_meta_block_field","updateMetaValue","newValue","createElement","label","value","onChange","registerBlockType","metadata","name","edit"],"sourceRoot":""}